/*
 * Copyright (c) 2013 Heiko Stuebner <heiko@sntech.de>
 *
 * This file is dual-licensed: you can use it either under the terms
 * of the GPL or the X11 license, at your option. Note that this dual
 * licensing only applies to this file, and not this project as a
 * whole.
 *
 *  a) This file is free software; you can redistribute it and/or
 *     modify it under the terms of the GNU General Public License as
 *     published by the Free Software Foundation; either version 2 of the
 *     License, or (at your option) any later version.
 *
 *     This file is distributed in the hope that it will be useful,
 *     but WITHOUT ANY WARRANTY; without even the implied warranty of
 *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *     GNU General Public License for more details.
 *
 * Or, alternatively,
 *
 *  b) Permission is hereby granted, free of charge, to any person
 *     obtaining a copy of this software and associated documentation
 *     files (the "Software"), to deal in the Software without
 *     restriction, including without limitation the rights to use,
 *     copy, modify, merge, publish, distribute, sublicense, and/or
 *     sell copies of the Software, and to permit persons to whom the
 *     Software is furnished to do so, subject to the following
 *     conditions:
 *
 *     The above copyright notice and this permission notice shall be
 *     included in all copies or substantial portions of the Software.
 *
 *     THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 *     EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
 *     OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 *     NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
 *     HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
 *     WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 *     FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 *     OTHER DEALINGS IN THE SOFTWARE.
 */

/dts-v1/;
#include <dt-bindings/input/input.h>
#include "rk3188.dtsi"

/ {
	model = "Beelink MK908";
	compatible = "radxa,rock", "rockchip,rk3188";

	memory@60000000 {
		device_type = "memory";
		reg = <0x60000000 0x80000000>;
	};


	vcc_io: vcc-io {
		compatible = "regulator-fixed";
		regulator-name = "vcc_io";
		regulator-min-microvolt = <3300000>;
		regulator-max-microvolt = <3300000>;
	};

	vcc_host: usb-host-regulator {
		compatible = "regulator-fixed";
		enable-active-high;
		gpio = <&gpio3 RK_PD6 GPIO_ACTIVE_HIGH>;
		pinctrl-0 = <&host_drv>;
		pinctrl-names = "default";
		regulator-always-on;
		regulator-name = "host-pwr";
		regulator-min-microvolt = <5000000>;
		regulator-max-microvolt = <5000000>;
		startup-delay-us = <100000>;
		vin-supply = <&vcc_io>;
	};

	vcc_otg: usb-otg-regulator {
		compatible = "regulator-fixed";
		enable-active-high;
		gpio = <&gpio3 RK_PD5 GPIO_ACTIVE_HIGH>;
		pinctrl-0 = <&otg_drv>;
		pinctrl-names = "default";
		regulator-always-on;
		regulator-name = "vcc_otg";
		regulator-min-microvolt = <5000000>;
		regulator-max-microvolt = <5000000>;
		startup-delay-us = <100000>;
		vin-supply = <&vcc_io>;
	};
	sd1_pwrseq: sd1-pwrseq {
		compatible = "mmc-pwrseq-simple";
		/*pinctrl-names = "default";
		pinctrl-0 = <&bt_wake_h>;*/

		/*
		 * On the module itself this is one of these (depending
		 * on the actual card populated):
		 * - SDIO_RESET_L_WL_REG_ON
		 * - SDIO_RESET_L_WL_RST
		 * - SDIO_RESET_L_BT_EN
		 */
		reset-gpios = <&gpio3 RK_PD0 GPIO_ACTIVE_LOW>, /* WL_REG_ON */
			      <&gpio2 RK_PA7 GPIO_ACTIVE_LOW>, /* WL_RST */
			      <&gpio1 RK_PA3 GPIO_ACTIVE_LOW>; /* BT_EN */
	};

/*
3 pc5 low sd1-clk/mac_clk
3 pd5 low/high pwm2-out
1 pc0 low/high i2s0-bus
1 pc1 high i2s0-bus
1 pc0-2 low i2s0-bus
1 pc3 high i2s0-bus


1 pa2 low uart0-cts
1 pa3 low uart0-rts
3 pc7 low sd1-wp
3 pd1 high emac-mdio

3 pd0 wifi_power
2 pa7 wifi_reset
3 pd1 ap6210_reset
*/
};

&pwm1 {
	status = "okay";
};

&pwm2 {
	status = "okay";
};

&pwm3 {
	status = "okay";
};

&i2s0 {
	status = "okay";
};

&mmc0 {
	no-emmc;
	no-sdio;
	cap-sd-highspeed;
	cap-mmc-highspeed;
	bus-width = <4>;
	disable-wp;
	pinctrl-names = "default";
	pinctrl-0 = <&sd0_clk>, <&sd0_cmd>, <&sd0_cd>, <&sd0_bus4>;
	status = "okay";
};

&mmc1 {
	clock-frequency = <390625>;
	pinctrl-names = "default";
	disable-wp;
	pinctrl-0 = <&sd1_clk>, <&sd1_cmd>, <&sd1_wp>, <&sd1_bus4>, <&wifi_pwr>, <&ap6210_reset>, <&wifi_reset>, <&sd_wp2>, <&uart0_cts2>, <&uart0_rts2>;
	bus-width = <4>;
	non-removable;
	status = "okay";
	mmc-pwrseq = <&sd1_pwrseq>;
};

/*
https://github.com/Dee-UK/D33_KK_Kernel/blob/master/arch/arm/mach-rk3188/board-rk3188-box.c
*/

&pinctrl {
	usb-host {
		host_drv: host-drv {
			rockchip,pins = <RK_GPIO3 30 RK_FUNC_GPIO &pcfg_pull_none>;
		};
	};

	usb-otg {
		otg_drv: otg-drv {
			rockchip,pins = <RK_GPIO3 29 RK_FUNC_GPIO &pcfg_pull_none>;
		};
	};

	sd1 {
		wifi_pwr: wifi-pwr {
			rockchip,pins = <RK_GPIO3 RK_PD0 RK_FUNC_1 &pcfg_pull_none>;
		};
		ap6210_reset: ap6210-reset {
			rockchip,pins = <RK_GPIO3 RK_PD1 RK_FUNC_1 &pcfg_pull_none>;
		};
		wifi_reset: wifi-reset {
			rockchip,pins = <RK_GPIO2 RK_PA7 RK_FUNC_1 &pcfg_pull_none>;
		};
		sd_wp2: sd-wp2 {
			rockchip,pins = <RK_GPIO3 RK_PC7 RK_FUNC_GPIO &pcfg_pull_none>;
		};
		uart0_cts2: uart0-cts2 {
			rockchip,pins = <RK_GPIO1 RK_PA2 RK_FUNC_GPIO &pcfg_pull_none>;
		};
		uart0_rts2: uart0-rts2 {
			rockchip,pins = <RK_GPIO1 RK_PA3 RK_FUNC_GPIO &pcfg_pull_none>;
		};

	};
};

&saradc {
	status = "okay";
};

&spi1 {
	status = "okay";
};

&uart2 {
	status = "okay";
};

&usb_host {
	status = "okay";
};

&usb_otg {
	status = "okay";
};

&usbphy {
	status = "okay";
};

&wdt {
	status = "okay";
};
